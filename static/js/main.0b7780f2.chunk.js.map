{"version":3,"sources":["reducers/listPopular.js","reducers/fullInfo.js","reducers/cardState.js","actions/index.js","reducers/offers.js","reducers/playerState.js","reducers/index.js","components/Loading.js","components/Player/index.js","components/Card/ProductionCompanies.js","components/ButtonGenerate.js","components/Card/Card.js","components/Generate.js","components/Form.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","data","listPopular","state","action","type","fullInfo","show","visibility","CardState","status","FETCH_OFFERS","FETCH_OFFERS_SUCCESS","FETCH_OFFERS_FAILURE","RESET_OFFERS","GET_POPULAR_SHOW_INFO","GET_MOST_POPULAR_SHOWS","FETCH_OFFER","FETCH_OFFER_SUCCESS","FETCH_OFFER_FAILURE","RESET_OFFER","VIDEO_PLAYER","CARD_STATE","api_key","process","url","today","Date","now","days","cachedLimitDate","getDate","getMonth","getFullYear","getCache","name","localName","limitDate","reachedLimitTime","localStorage","removeItem","getItem","JSON","parse","storeCache","value","time","console","error","setItem","stringify","randomShowCategory","rShow","Math","floor","random","loadMostPopularShows","fetchOffersSuccess","dispatch","r","axios","method","redirect","headers","then","res","log","statusText","fetchOffersError","results","setFullListPopular","err","getFullInfo","undefined","randShowbyID","length","id","setFullInfo","showType","setCardState","setPlayerState","offers","payload","INITIAL_STATE","offerList","loading","selectedOffer","offer","PlayerState","allReducers","combineReducers","listShows","fullInfoShow","error1","message","error2","cardVisibility","cardState","videoPlayer","playerState","Loading","Spinner","size","color","thickness","speed","style","position","zIndex","top","left","transform","marginRight","player","props","thumbnail","playing","seekTime","handlePause","setState","getCurrentTime","handlePlay","isPlayerReady","playedSeconds","handleSeek","logo","bind","this","setModalClose","className","background","width","height","fontSize","lineHeight","title","onClick","right","Provider","link","ref","config","youtube","playerVars","showinfo","rel","disablekb","modestbranding","iv_load_policy","light","onPlay","onPause","onError","onEnded","onProgress","onReady","e","onSeek","Component","connect","actionsCreate","ProductionCompanies","companies","baseUrl","listCompanies","map","companie","index","Tooltip","key","Text","Avatar","alt","src","logo_path","AvatarGroup","max","ButtonGenerate","_onClick","_class","Fragment","Card","info","useState","setShow","useDispatch","playerStatus","useSelector","InfoShowData","inf","setInfo","trailerData","setTrailerData","getTrailerInfo","a","original_name","original_title","release_date","split","first_air_date","searchString","opts","maxResults","search","useEffect","classes","makeStyles","theme","mainContainer","backdrop_path","backgroundSize","backgroundPosition","twoColumns","gridTemplateColumns","alignItems","playIcon","transition","borderRadius","backgroundColor","boxShadow","useStyles","listGenres","genres","genre","number_of_seasons","year","Grid","container","item","xs","lg","sm","Box","gridArea","Stack","Heading","as","vote_average","runtimeStr","textTransform","Container","padding","charLimit","readMoreText","readLessText","overview","production_companies","showList","generateNewMovie","IconButton","aria-label","Player","Generate","shows","infoShow","show_type","display","Alert","variant","severity","Form","actions","customTheme","colors","brand","900","800","700","fontSizes","md","xl","sizes","space","full","App","children","cardInfo","ThemeProvider","CSSReset","columns","align","justify","Flex","flexDirection","justifyContent","textAlign","fontWeight","textshadow","require","Boolean","window","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","document","body","backgroundImage","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0b7780f2.chunk.js","sourcesContent":["let defaultState={\r\n    data:{},\r\n}\r\n\r\nconst listPopular = (state=defaultState, action) => {\r\n    switch(action.type){\r\n        case \"GET_MOST_POPULAR_SHOWS\":\r\n            return{\r\n                ...state,\r\n                 data: action.data\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default listPopular;","let defaultState={\r\n    data:{},\r\n}\r\n\r\nconst fullInfo = (state=defaultState, action) => {\r\n    switch(action.type){\r\n        case \"GET_POPULAR_SHOW_INFO\":\r\n            return{\r\n                ...state,\r\n                data: {\r\n                    data: action.data.data,\r\n                    show: action.data.show\r\n                }\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default fullInfo;","let defaultState={\r\n    visibility: false,\r\n}\r\n\r\nconst CardState = (state=defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'CARD_STATE':\r\n            return {\r\n                ...state,\r\n                visibility: action.status,\r\n                }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport default CardState;","import axios from 'axios';\r\n\r\n// offers\r\nexport const FETCH_OFFERS = 'FETCH_OFFERS';\r\nexport const FETCH_OFFERS_SUCCESS = 'FETCH_OFFERS_SUCCESS';\r\nexport const FETCH_OFFERS_FAILURE = 'FETCH_OFFERS_FAILURE';\r\nexport const RESET_OFFERS = 'RESET_OFFERS';\r\nexport const GET_POPULAR_SHOW_INFO = 'GET_POPULAR_SHOW_INFO';\r\nexport const GET_MOST_POPULAR_SHOWS = 'GET_MOST_POPULAR_SHOWS';\r\n// offer\r\nexport const FETCH_OFFER = 'FETCH_OFFER';\r\nexport const FETCH_OFFER_SUCCESS = 'FETCH_OFFER_SUCCESS';\r\nexport const FETCH_OFFER_FAILURE = 'FETCH_OFFER_FAILURE';\r\nexport const RESET_OFFER = 'RESET_OFFER';\r\n\r\nexport const VIDEO_PLAYER = 'VIDEO_PLAYER';\r\nexport const CARD_STATE = 'CARD_STATE';\r\n\r\nconst api_key = process.env.REACT_APP_API_KEY\r\nconst url = \"https://api.themoviedb.org/3\";\r\n\r\nconst days = 1;\r\nconst today = new Date(Date.now() + days * 24 * 60 * 60 * 1000);\r\nconst cachedLimitDate = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear(); // keep storage for x days\r\n\r\n// Check if reach the limit time\r\nfunction reachedLimitTime(now){\r\n    let limitDate = new Date(cachedLimitDate)\r\n    now = new Date(now);\r\n\r\n    if(now > limitDate)\r\n        return true\r\n\r\n    return false\r\n}\r\n\r\n// store cache\r\nfunction getCache(name){\r\n    const today = new Date();\r\n    const now = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n    const localName = name+\"_data\";\r\n\r\n    if(reachedLimitTime(now)){\r\n        localStorage.removeItem(name+\"_data\")\r\n        localStorage.removeItem(localName)\r\n        return false\r\n    }\r\n\r\n    if(localStorage.getItem(localName)) { //if not exist or not in time\r\n        //console.log('Cached data')\r\n        return JSON.parse(localStorage.getItem(localName))\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nfunction storeCache(name, value=\"\", time) {\r\n    if(name === \"\"){\r\n        console.error(`${name} is required in function storeCache. `)\r\n        return false\r\n    }\r\n\r\n    localStorage.setItem(name+\"_data\",JSON.stringify(value)); // data\r\n    localStorage.setItem(name,time);    // time\r\n\r\n    return true\r\n}\r\n\r\nexport function randomShowCategory(){\r\n    const show = {\r\n        type:'CATEGORY',\r\n        name: ''\r\n    }\r\n    let shows = ['movie','tv'];\r\n    // Random movie or tv\r\n    let r = Math.floor(Math.random() * 2);\r\n    let rShow = shows[r]\r\n    show.name = rShow;\r\n    return show;\r\n}\r\n\r\n\r\nexport function loadMostPopularShows(show = \"\"){\r\n    // gerenarate random show\r\n    if(!show)\r\n        show = randomShowCategory();\r\n\r\n    if(getCache(show))\r\n        return fetchOffersSuccess(getCache(show))\r\n\r\n    return function action(dispatch) {\r\n        dispatch({ type: FETCH_OFFERS })\r\n\r\n    let totalPagesToSeach = 5;\r\n    let r = Math.floor(Math.random() * totalPagesToSeach);\r\n\r\n    const request = axios({\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        url:`${url}/${show}/popular?api_key=${api_key}&language=en-US&page=${r}`,\r\n        headers: []\r\n      });\r\n\r\n      return request.then(res => {\r\n            console.log(\"Getting from APi: \"+ show)\r\n\r\n            if( res.status !== 200 ){\r\n                console.log(res.statusText)\r\n                dispatch(fetchOffersError(res.statusText))\r\n            }\r\n\r\n            storeCache(show,res.data.results,cachedLimitDate)\r\n            dispatch(setFullListPopular(res.data.results))\r\n            dispatch(fetchOffersSuccess(res.data.results))\r\n\r\n        },\r\n        err => dispatch(fetchOffersError(err))\r\n      );\r\n    }\r\n}\r\n\r\nexport function getFullInfo(data,show) {\r\n\r\n    if(data === undefined)\r\n        return fetchOffersError(\"Data undefiend\")\r\n    // obtain random id\r\n    let randNum = Math.floor(Math.random() * data.length);\r\n    let randShowbyID = data[randNum].id\r\n\r\n    return function action(dispatch) {\r\n        dispatch({ type: FETCH_OFFERS })\r\n\r\n    const request = axios({\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        url: `${url}/${show}/${randShowbyID}?api_key=${api_key}&language=en-US`,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      return request.then(res => {\r\n            console.log(\"Getting from APi: \"+ randShowbyID)\r\n\r\n            if( res.status !== 200 ){\r\n                dispatch(fetchOffersError(res.statusText))\r\n            }\r\n            dispatch(setFullInfo({data:res.data,showType: show}))\r\n            dispatch(fetchOffersSuccess(res.data))\r\n\r\n        },\r\n        err => dispatch(fetchOffersError(err))\r\n      );\r\n    }\r\n}\r\n\r\nexport function setFullInfo(value){\r\n    return {\r\n        type: GET_POPULAR_SHOW_INFO,\r\n        data: {\r\n            data: value.data,\r\n            show: value.showType\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport function setFullListPopular(value){\r\n    return {\r\n        type: GET_MOST_POPULAR_SHOWS,\r\n        data: value,\r\n    }\r\n}\r\n\r\n\r\nexport function setCardState(value) {\r\n    return{\r\n        type: CARD_STATE,\r\n        status: value\r\n    }\r\n}\r\n\r\nexport function setPlayerState(value) {\r\n    return {\r\n\t\ttype: VIDEO_PLAYER,\r\n\t\tstatus: value\r\n\t}\r\n}\r\n\r\nexport function fetchOffersSuccess(offers) {\r\n\treturn {\r\n\t\ttype: FETCH_OFFERS_SUCCESS,\r\n\t\tpayload: offers\r\n\t}\r\n}\r\n\r\nexport function fetchOffersError(error) {\r\n\treturn {\r\n\t\ttype: FETCH_OFFERS_FAILURE,\r\n\t\tpayload: error\r\n\t}\r\n}","import {\r\n    FETCH_OFFERS, FETCH_OFFERS_SUCCESS, FETCH_OFFERS_FAILURE, RESET_OFFERS,\r\n    FETCH_OFFER, FETCH_OFFER_SUCCESS, FETCH_OFFER_FAILURE, RESET_OFFER\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n    offerList: {\r\n        offers: [],\r\n        error: null,\r\n        loading: false\r\n    },\r\n    selectedOffer: {\r\n        offer: null,\r\n        error: null,\r\n        loading: false\r\n    }\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n\r\n    switch(action.type) {\r\n        case FETCH_OFFERS:\r\n            return {\r\n                ...state, offerList: {\r\n                    offers: [],\r\n                    error: null,\r\n                    loading: true\r\n                }\r\n            };\r\n        case FETCH_OFFERS_SUCCESS:\r\n            return {\r\n                ...state, offerList: {\r\n                    offers: action.payload,\r\n                    error: null,\r\n                    loading: false\r\n                }\r\n            };\r\n        case FETCH_OFFERS_FAILURE:\r\n            let error1 = action.payload || {message: action.payload.message}\r\n            return {\r\n                ...state, offerList: {\r\n                    offers: [],\r\n                    error: error1,\r\n                    loading: false\r\n                }\r\n            };\r\n        case RESET_OFFERS:\r\n            return {\r\n                ...state, offerList: {\r\n                    offers: [],\r\n                    error: null,\r\n                    loading: false\r\n                }\r\n            };\r\n        case FETCH_OFFER:\r\n            return {\r\n                ...state, selectedOffer: {\r\n                    ...state.selectedOffer,\r\n                    loading: true\r\n                }\r\n            };\r\n        case FETCH_OFFER_SUCCESS:\r\n            return {\r\n                ...state, selectedOffer: {\r\n                    offer: action.payload,\r\n                    error: null,\r\n                    loading: false\r\n                }\r\n            };\r\n        case FETCH_OFFER_FAILURE:\r\n            let error2 = action.payload || {message: action.payload.message}\r\n            return {\r\n                ...state, selectedOffer: {\r\n                    offer: null,\r\n                    error: error2,\r\n                    loading: false\r\n                }\r\n            };\r\n        case RESET_OFFER:\r\n            return {\r\n                ...state, selectedOffer: {\r\n                    offer: null,\r\n                    error: null,\r\n                    loading: false\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","let defaultState={\r\n    status: false,\r\n}\r\n\r\nconst PlayerState = (state=defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'VIDEO_PLAYER':\r\n            return {\r\n                ...state,\r\n                status: !action.status,\r\n                }\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\n\r\nexport default PlayerState;","import listPopular from './listPopular';\r\nimport fullInfo from './fullInfo';\r\nimport cardState from './cardState';\r\nimport offers from './offers';\r\nimport playerState from './playerState';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\n const allReducers = combineReducers({\r\n    listShows        : listPopular,\r\n    fullInfoShow     : fullInfo,\r\n    offers           : offers,\r\n    cardVisibility   : cardState,\r\n    videoPlayer      : playerState,\r\n });\r\n\r\nexport default allReducers;\r\n","import React from 'react'\r\nimport { Spinner } from \"@chakra-ui/core\"\r\n\r\nexport default function Loading() {\r\n    return <Spinner size=\"xxs\" color=\"red.600\"  thickness=\"8px\" speed=\".9s\" style={{position:'absolute',zIndex:'2',top:'50%', left:'50%', transform:\"translate(-50%, -50%)\", marginRight:'-50%'}} />\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player'\r\nimport Loading from '../Loading'\r\nimport {IconContext} from \"react-icons\";\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport {connect} from 'react-redux'\r\nimport * as actionsCreate from '../../actions'\r\nimport './VideoPlayer.css'\r\n\r\nexport class player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePause =  this.handlePause.bind(this);\r\n        this.handlePlay =  this.handlePlay.bind(this);\r\n      }\r\n\r\n    state = {\r\n        loading: false,\r\n        thumbnail: false,\r\n        playing: true,\r\n        seekTime: 0,\r\n    }\r\n    componentDidMount(){}\r\n\r\n    handlePause = () => {\r\n        this.setState({\r\n            thumbnail: true,\r\n            playing: false,\r\n            seekTime: this.getCurrentTime\r\n        })\r\n    }\r\n\r\n    handlePlay = () => {\r\n        this.setState({\r\n            thumbnail: false,\r\n            loading: false,\r\n            seekTime: this.getCurrentTime,\r\n            playing: true\r\n        })\r\n    }\r\n\r\n    isPlayerReady = () => {\r\n        console.log('The player is ready..')\r\n    }\r\n\r\n    getCurrentTime = (time) => {\r\n        return time.playedSeconds\r\n    }\r\n\r\n    handleSeek = () => {\r\n        console.logo(\"seeking\")\r\n    }\r\n\r\n    render() {\r\n        const {setPlayerState, videoPlayer}  = this.props;\r\n        const { loading, playing, thumbnail } = this.state;\r\n\r\n        const setModalClose = () => {\r\n           setPlayerState(videoPlayer.status)\r\n        }\r\n\r\n        return (\r\n            <div className=\"player--container\" style={{position:'absolute',top:'0',left:'0',zIndex:'9',background: '#00000096',width:'100vw', height:'100vh'}}>\r\n                <h1 style={{position: 'absolute', left: '10%', zIndex: 9, fontSize: '1.5rem', lineHeight: '87px'}}>{this.props.data.title}</h1>\r\n                <button type=\"button\" onClick={setModalClose} style={{position:'absolute', top:'3%', right: '3%',zIndex:'9'}} >\r\n                    <IconContext.Provider value={{  size:'2rem' }}>\r\n                        <FaTimes/>\r\n                    </IconContext.Provider>\r\n                </button>\r\n\r\n                {loading ? <Loading /> : ''}\r\n                {this.props.data.link !== null ? <ReactPlayer\r\n                    ref={this.ref}\r\n                    url={this.props.data.link}\r\n                    config={{\r\n                        youtube: {\r\n                            playerVars: { showinfo: 0, rel: 1, disablekb: 1, modestbranding: 1, iv_load_policy:0 }\r\n                        },\r\n                      }}\r\n                    playing = {playing}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    light={false}\r\n                    onPlay={this.handlePlay}\r\n                    onPause={this.handlePause}\r\n                    onError={setModalClose}\r\n                    onEnded={setModalClose}\r\n                    onProgress={this.getCurrentTime}\r\n                    onReady={e => console.log('onReady')}\r\n                    onSeek={e => console.log('onSeek')}\r\n                    /> : ''}\r\n                { thumbnail ? <div className=\"full-hw player--thumb\"  onClick={this.handlePlay}>\r\n                    <IconContext.Provider value={{  size:'2rem' }} >\r\n                        <PlayArrowIcon/>\r\n                    </IconContext.Provider>\r\n                    </div> : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateProps=(state) => {\r\n    return state\r\n}\r\n\r\nexport default connect (mapStateProps, actionsCreate) (player);\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Text } from \"@chakra-ui/core\"\r\nimport './Card.css'\r\n\r\nexport default function ProductionCompanies({ companies, baseUrl }) {\r\n   const listCompanies = companies.map((companie,index) =>\r\n    <Tooltip key={index} title={<Text fontSize=\"sm\" >{companie.name}</Text>}>\r\n        <Avatar alt={companie.name} src={companie.logo_path !== null ? baseUrl+companie.logo_path : process.env.PUBLIC_URL + '/images/logo_companie_square_placeholder_80x80.png'} />\r\n    </Tooltip>\r\n    );\r\n\r\n  return (\r\n      <>\r\n    <AvatarGroup max={3} className=\"avatar-group\" >\r\n         {listCompanies}\r\n    </AvatarGroup>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function ButtonGenerate({ id, _onClick, name, _class }) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button\r\n            type=\"button\"\r\n            id={id}\r\n            className={_class !== undefined ? 'button ' + _class : 'button '}\r\n            onClick={_onClick}>\r\n                <div className=\"circle\"></div>\r\n                <div className=\"square\"\r\n                    size=\"lg\"\r\n                    color=\"#e63946\">{name}</div>\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect  } from 'react'\r\nimport {  Stack, Text, Box, Heading } from \"@chakra-ui/core\"\r\nimport { FaStar } from 'react-icons/fa'\r\nimport { IconContext } from \"react-icons\";\r\nimport ReadMoreAndLess from 'react-read-more-less';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {  Container,  Grid, } from '@material-ui/core';\r\nimport Player from '../Player'\r\n\r\nimport search from 'youtube-search'\r\n\r\nimport './Card.css'\r\nimport ProductionCompanies from './ProductionCompanies'\r\nimport Loading from '../Loading'\r\n// icons\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport BtnGenerate from '../ButtonGenerate'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setPlayerState, randomShowCategory, loadMostPopularShows, getFullInfo } from '../../actions'\r\n\r\nexport default function Card({ info, showType }) {\r\n  //Cast : https://api.themoviedb.org/3/movie/338762/credits?api_key=<API_KEY>\r\n\r\n  const BASE_URL_ORIGINAL = 'https://image.tmdb.org/t/p/w1280/'\r\n  //const BASE_URL_LOGO_SIZE_92 = 'https://image.tmdb.org/t/p/w92/'\r\n  const BASE_URL_LOGO_SIZE_45 = 'https://image.tmdb.org/t/p/w45/'\r\n  // More Sizes on: https://www.themoviedb.org/talk/5a5bf3860e0a260d9d0013c5\r\n\r\n  const [show, setShow] = useState(showType.name);\r\n  const dispatch = useDispatch();\r\n  const playerStatus = useSelector(state => state.videoPlayer)\r\n  const offers = useSelector(state => state.offers)\r\n  const fullInfoShow = useSelector(state => state.fullInfoShow.data)\r\n  const InfoShowData = useSelector(state => state.fullInfoShow.data.data)\r\n  const [inf, setInfo] = useState(InfoShowData);\r\n  const [trailerData,setTrailerData] = useState(null);\r\n  const youtube_key = process.env.REACT_APP_YOUTUBE_KEY\r\n\r\n  const getTrailerInfo = async () => {\r\n    let title = fullInfoShow.data.original_name ? fullInfoShow.data.original_name : fullInfoShow.data.original_title;\r\n    let year = fullInfoShow.data.release_date ? fullInfoShow.data.release_date.split('-')[0] : fullInfoShow.data.first_air_date.split('-')[0];\r\n\r\n    let searchString = title + \" \" + fullInfoShow.show + \" Trailer\";\r\n    var opts = {\r\n      maxResults: 1,\r\n      key: youtube_key\r\n    };\r\n\r\n    search(searchString, opts, function(err, results) {\r\n      if(err) return console.log(err);\r\n\r\n      console.log(results)\r\n      setTrailerData(results[0])\r\n    });\r\n};\r\n\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n      setShow(fullInfoShow.show)\r\n      setInfo(fullInfoShow.data)\r\n      getTrailerInfo();\r\n    }, [fullInfoShow.show, fullInfoShow.data]);\r\n\r\n  const name = \"Generate\";\r\n  const useStyles = makeStyles((theme) => ({\r\n    /*  background: `url(${BASE_URL_ORIGINAL+inf.backdrop_path}), url(${inf.posters.posters[1].link}) #000 no-repeat `, */\r\n      mainContainer:{\r\n        background: `url(${BASE_URL_ORIGINAL+inf.backdrop_path}) #000 no-repeat `,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        height: '100%',\r\n        position: 'relative',\r\n        zIndex: '0'\r\n      },\r\n      twoColumns:{\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(50%, 1fr))',\r\n        alignItems: 'center',\r\n      },\r\n      playIcon: {\r\n        height: 250,\r\n        width: 250,\r\n        color: '#e833409e',\r\n        transition: 'all .5s',\r\n        '&:hover': {\r\n            color: '#e83340',\r\n            borderRadius: '100%',\r\n            backgroundColor: 'rgb(0 0 0 / 0.10)',\r\n            boxShadow: '0 0 20px 15px rgb(0 0 0 / 0.10)',\r\n\r\n          },\r\n      },\r\n}));\r\n\r\n    const classes = useStyles();\r\n    const handleOpen = () => {\r\n      dispatch(setPlayerState(!playerStatus));\r\n    }\r\n\r\n/* https://chakra-ui.com/simplegrid*/\r\n  const listGenres = inf.genres.map((genre,index) =>\r\n    <React.Fragment key={genre.id}>{genre.name} {index !== inf.genres.length-1 ? ',' : ''} </React.Fragment>\r\n  );\r\n\r\n  const genre = inf.number_of_seasons ? (inf.number_of_seasons.length === 1 ? <React.Fragment>{inf.number_of_seasons} Season</React.Fragment> : <React.Fragment>{inf.number_of_seasons} Seasons</React.Fragment>): '';\r\n\r\n  const title = inf.original_name ? inf.original_name : inf.original_title;\r\n  const year = inf.release_date ? inf.release_date.split('-')[0] : '';\r\n\r\n   function generateNewMovie(){\r\n    try{\r\n      const showType = randomShowCategory()\r\n      loadMostPopularShows(showType.name)\r\n      const showList =  dispatch( loadMostPopularShows(showType.name) )\r\n      dispatch( getFullInfo(showList.payload,showType.name) )\r\n\r\n    }catch (err) {\r\n      console.error(\"Something went wrong:\", err);\r\n   }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {offers.offerList.loading  ? <Loading /> :''}\r\n    <Grid container className={classes.mainContainer}>\r\n        <Grid container item xs={12} className='info-movie--container' style={{height: '100vh'}}>\r\n          <Grid item lg={6} sm={6} xs={12} className='Card--grid'>\r\n            <Box gridArea='elem'>\r\n              <Stack className=\"info--Card\">\r\n                <Box className=\"show-info-above-title\"><Text fontSize=\"xl\">{listGenres}</Text></Box>\r\n                <Box><Heading as=\"h1\" fontSize=\"6xl\">{title}</Heading></Box>\r\n                <Grid item className=\"show-info-below-title\">\r\n                  <Text fontSize=\"xl\">\r\n                    <IconContext.Provider value={{color:'orange', className:'rating-star'}}><FaStar/></IconContext.Provider>\r\n                    {inf.vote_average}\r\n                    </Text>\r\n                  <Text>\r\n                      {inf.first_air_date ? inf.first_air_date.split('-')[0].split('-')[0]  : ''}\r\n                      {year}\r\n                    </Text>\r\n                  <Text>{inf.runtimeStr}</Text>\r\n                  <Text>{genre}</Text>\r\n                  <Text style={{ textTransform: 'uppercase' }}>{show}</Text>\r\n                </Grid>\r\n                <Box>\r\n                  <Container style={{padding: '5px', fontSize:'1.15rem'}}>\r\n                    <ReadMoreAndLess className=\"read-more\"  charLimit={300} readMoreText=\" Read more\" readLessText=\" Read less\">\r\n                      {inf.overview}\r\n                    </ReadMoreAndLess>\r\n                  </Container>\r\n                </Box>\r\n                <ProductionCompanies companies={inf.production_companies} baseUrl={BASE_URL_LOGO_SIZE_45} />\r\n                <Grid item xs={12}><BtnGenerate id='button-fill--card' _onClick={ () =>{ generateNewMovie() }} name={name} _class='bottom-center'/></Grid>\r\n\r\n              </Stack>\r\n            </Box>\r\n          </Grid>\r\n\r\n          {trailerData ? <Grid item lg={6} sm={6} xs={12} className=\"player\">\r\n            <IconButton aria-label=\"play/pause\"  type=\"button\" onClick={() => handleOpen()}>\r\n                  <PlayArrowIcon className={classes.playIcon} />\r\n            </IconButton>\r\n          </Grid> : ''}\r\n\r\n        </Grid>\r\n        { playerStatus.status ? <Player data={trailerData} thumbnail={BASE_URL_ORIGINAL+inf.backdrop_path}/> : ''}\r\n    </Grid>\r\n  </>\r\n  )\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Card from './Card/Card'\r\nimport {IconContext} from \"react-icons\";\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport BtnGenerate from './ButtonGenerate'\r\nimport {connect} from 'react-redux'\r\nimport * as actionsCreate from '../actions'\r\nimport Loading from './Loading'\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\n/* Esperar: setTimeout(() => setCardState(true),1000)*/\r\nclass Generate extends Component {\r\n    state = {\r\n        error: false,\r\n        shows: null,\r\n        infoShow: null,\r\n        show_type: '',\r\n    }\r\n\r\n    async generateNewMovie(){\r\n\r\n        try{\r\n            const show = this.props.randomShowCategory()\r\n            this.setState({ show_type: show })\r\n\r\n            await this.props.loadMostPopularShows(show.name)\r\n\r\n            const showList = this.props.loadMostPopularShows(show.name)\r\n            this.setState({ shows: showList.payload})\r\n\r\n            const info = await this.props.getFullInfo(showList.payload,show.name)\r\n            this.setState({ infoShow: this.props.offers.offerList.offers})\r\n\r\n            if(this.props.offers.offerList.error !== null || showList.type === 'FETCH_OFFERS_FAILURE')\r\n                this.setState({ error: true})\r\n\r\n        return info\r\n\r\n        }catch (err) {\r\n            console.error(\"Something went wrong:\", err);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const {cardVisibility, setCardState, setPlayerState, videoPlayer, offers} = this.props;\r\n        const { error, show_type, infoShow } = this.state;\r\n\r\n        const name = 'Show Me';\r\n\r\n        const BtnGenerateHandlers = () => {\r\n            setCardState(true)\r\n        }\r\n\r\n        const ArrowBackHandler = () => {\r\n            if(videoPlayer.status){\r\n                setPlayerState(videoPlayer.status)\r\n            }\r\n            setCardState(false);\r\n        }\r\n\r\n        return (\r\n            <>\r\n            {offers.offerList.loading ? <Loading /> :''}\r\n            {error ?\r\n            <div style={{ display: 'inline-flex' }}>\r\n             <Alert variant=\"outlined\" severity=\"error\" style={{ backgroundColor: '#3b000030', color:'#fff' }}>\r\n                It is not possible to search at the moment. Try again later.\r\n             </Alert>\r\n            </div>\r\n            : ''}\r\n\r\n            { !error  && !cardVisibility.visibility ? <BtnGenerate _onClick={async () =>{\r\n                await this.generateNewMovie();\r\n                BtnGenerateHandlers();\r\n            }}  name={name}/> : ''}\r\n\r\n            {cardVisibility.visibility ?\r\n            <>\r\n                <Card info={infoShow} showType={show_type} />\r\n                <button type=\"button\" onClick={(ArrowBackHandler)} style={{position:'absolute', top:'3%', left: '3%'}} >\r\n                    <IconContext.Provider value={{  size:'2rem' }}>\r\n                        <FaArrowLeft/>\r\n                    </IconContext.Provider>\r\n                </button>\r\n            </> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateProps=(state) => {\r\n    return state\r\n}\r\n\r\nexport default connect (mapStateProps, actionsCreate) (Generate);\r\n","import React, { Component } from 'react'\r\nimport Generate from './Generate';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nexport class Form extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Generate id='button-fill'/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateProps=(state) => {\r\n    return state\r\n}\r\n\r\nexport default connect (mapStateProps, actions) (Form);","import { theme } from \"@chakra-ui/core\";\r\n\r\nconst customTheme = {\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      brand: {\r\n        900: \"#1a365d\",\r\n        800: \"#153e75\",\r\n        700: \"#2a69ac\",\r\n      },\r\n    },\r\n    fontSizes: {\r\n      xs: \"0.75rem\",\r\n      sm: \"0.875rem\",\r\n      md: \"1rem\",\r\n      lg: \"1.125rem\",\r\n      xl: \"1.25rem\",\r\n      \"2xl\": \"1.5rem\",\r\n      \"3xl\": \"1.875rem\",\r\n      \"4xl\": \"2.25rem\",\r\n      \"5xl\": \"3rem\",\r\n      \"6xl\": \"4rem\",\r\n      \"7xl\": \"5rem\",\r\n      \"8xl\": \"6rem\",\r\n      \"6rpw\": \"5vw\",\r\n    },\r\n    sizes: {\r\n      ...theme.space,\r\n      full: \"100%\",\r\n      \"xxs\": \"5rem\",\r\n      \"3xs\": \"14rem\",\r\n      \"2xs\": \"16rem\",\r\n      xs: \"20rem\",\r\n      sm: \"24rem\",\r\n      md: \"28rem\",\r\n      lg: \"32rem\",\r\n      xl: \"36rem\",\r\n      \"2xl\": \"42rem\",\r\n      \"3xl\": \"48rem\",\r\n      \"4xl\": \"56rem\",\r\n      \"5xl\": \"64rem\",\r\n      \"6xl\": \"72rem\",\r\n    },\r\n  };\r\n\r\n  export default customTheme;","import React from 'react'\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport { ThemeProvider, CSSReset, Flex, Grid, Text, Box } from \"@chakra-ui/core\"\r\nimport { useSelector } from 'react-redux'\r\nimport customTheme from  './theme.js'\r\nrequire('dotenv').config()\r\n\r\nexport default function App({ children }) {\r\n  const cardInfo = useSelector(state => state.cardVisibility).visibility;\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n    <CSSReset />\r\n    {children}\r\n    <div className=\"App\">\r\n      <div className=\"v-container\">\r\n        <Grid columns={2} size=\"100%\" align=\"center\" justify=\"center\">\r\n          {!cardInfo ?\r\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\">\r\n            <Box>\r\n              <Text\r\n              textAlign=\"center\"\r\n              className=\"title\"\r\n              fontSize= \"6rpw\"\r\n              textTransform= \"uppercase\"\r\n              fontWeight= \"700\"\r\n              textshadow= \"0 0 300px #a9a9a9, 0 0 100px #a9a9a95e, 0 0 20px #040404\">\r\n                What to Watch Right Now\r\n              </Text>\r\n            </Box>\r\n          </Flex>\r\n          : ''}\r\n          <Box>\r\n            <Form />\r\n          </Box>\r\n      </Grid>\r\n      </div>\r\n    </div>\r\n  </ThemeProvider>\r\n  )\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// redux\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\"; // prevents constantly runing fetch, only on call\r\nimport allReducers from './reducers';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  composeEnhancer(applyMiddleware(thunk)),\r\n);\r\n\r\ndocument.body.style.backgroundImage = `url(${process.env.PUBLIC_URL}/images/bg2.jpg)`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}